# -*- coding: utf-8 -*-
"""Final_year_Project_code_web_scraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G2-SS46RNzfKRLvvxMFfh1mC_-oAr3Dv
"""

#http://en.espn.co.uk/scrum/rugby/series/index.html?trophy=65
from bs4 import BeautifulSoup
import requests 
import csv 

import csv
output_file = csv.writer(open('Prem_scores_Y.csv','w', newline = '', encoding="utf-8")) 
output_file.writerow(['Year','Home_Team','HTScore','Away_Team','ATScore','Winner','Winning_score','Loser','Losing_score','Draw'])
year = 1997
page = 126955
Page_number = str(page) # to loop pages 

result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table') #gets table with data 

results_table = table[0]
matches = results_table.find_all("tr") #splits table into rows

#loops for all rows in table (different number for every table)
for match in matches[3:135]:

    final = match.find_all("td")#splits rows into datapoints
    game = final[2].text #takes needed datapoint
    teams = game.split("-")#splits 2 teams
    l = len(teams[0])
    homescore = int(teams[0][l-3:l-1])# gets score of home team which is last 2 charachters 
    homename = teams[0][0:l-3]# gets name of home team which is all charachters except score 
    
    awayscore = int(teams[1][1:3])# same as home except score is first 2 characheters
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])
            
    
    
###############################################################################################################################################1998

page+=1
year = 1998
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:185]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])
    
   
# ##############################################################################################################################################1999

page+=1
year = 1999
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

# ##############################################################################################################################################2000

page+=1
year = 2000
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2001

page+=1
year = 2001
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2002

page+=1
year = 2002
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:136]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[136:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2003

page+=1
year = 2003
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[135:136]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[136:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])
            

##############################################################################################################################################2004

page+=1
year = 2004
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])




for match in matches[135:136]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[136:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2005

page+=1
year = 2005
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] 
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2006

page+=1
year = 2006
Page_number = str(page)
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/"+Page_number+".html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2007

year = 2007
result = requests.get("http://en.espn.co.uk/premiership-2008-09/rugby/series/26022.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2008

year = 2008
result = requests.get("http://en.espn.co.uk/premiership-2008-09/rugby/series/26028.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2009

year = 2009
result = requests.get("http://en.espn.co.uk/premiership/rugby/series/99000.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2010

year = 2010
result = requests.get("http://en.espn.co.uk/premiership-2010-11/rugby/series/118327.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2011

year = 2011
result = requests.get("http://en.espn.co.uk/premiership-2011-12/rugby/series/142402.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2012

year = 2012
result = requests.get("http://en.espn.co.uk/premiership-2012-13/rugby/series/166258.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2013

year = 2013
result = requests.get("http://en.espn.co.uk/premiership-2013-14/rugby/series/188579.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2014

year = 2014
result = requests.get("http://en.espn.co.uk/premiership-2014-15/rugby/series/231649.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2015

year = 2015
result = requests.get("http://en.espn.co.uk/premiership-2015-16/rugby/series/267979.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


##############################################################################################################################################2016

year = 2016
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/293351.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2017

year = 2017
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/296394.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2018

year = 2018
result = requests.get("http://en.espn.co.uk/scrum/rugby/series/300505.html?template=results")


url = result.content

soup = BeautifulSoup(url, 'html.parser')
table = soup.find_all('table')

results_table = table[0]
matches = results_table.find_all("tr")

for match in matches[3:135]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][0:l-3]
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])


for match in matches[135:137]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][12:l-3] #get rid of semi final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])



for match in matches[137:138]:

    final = match.find_all("td")
    game = final[2].text
    teams = game.split("-")
    l = len(teams[0])
    homescore = teams[0][l-3:l-1]
    homename = teams[0][7:l-3] #get rid of final
    
    awayscore = teams[1][1:3]
    awayname = teams[1][3:]
    
    if homescore>awayscore :
        winner = homename
        winning_score = homescore 
        loser = awayname 
        loser_score = awayscore
        Draw = 0
    elif awayscore>homescore :
        winner = awayname
        winning_score = awayscore
        loser = homename
        loser_score = homescore
        Draw = 0 
    else:
        winner = 'Draw'
        winning_score = 0
        loser = 'Draw'
        loser_score = 0
        Draw = 1

    output_file.writerow([year,homename,homescore,awayname,awayscore,winner,winning_score,loser,loser_score,Draw])

##############################################################################################################################################2019